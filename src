from flask import Flask, render_template_string, request, redirect, url_for, session
import sqlite3

app = Flask(__name__)
app.secret_key = "secret_key_123"  # needed for sessions

# ------------------- Database Setup -------------------
def init_db():
    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS users(
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            username TEXT UNIQUE,
            password TEXT
        )
    """)
    conn.commit()
    conn.close()

# ------------------- Routes -------------------
# Homepage
@app.route("/")
def home():
    if "username" in session:
        return f"<h2>Welcome {session['username']}!</h2><a href='/logout'>Logout</a>"
    return "<h2>Welcome! Please <a href='/login'>Login</a> or <a href='/register'>Register</a></h2>"

# Registration page
@app.route("/register", methods=["GET", "POST"])
def register():
    if request.method == "POST":
        username = request.form["username"]
        password = request.form["password"]
        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()
        try:
            cursor.execute("INSERT INTO users(username, password) VALUES(?, ?)", (username, password))
            conn.commit()
        except sqlite3.IntegrityError:
            return "⚠️ Username already exists!"
        finally:
            conn.close()
        return redirect(url_for("login"))

    return render_template_string("""
        <h2>Register</h2>
        <form method="post">
            Username: <input type="text" name="username" required><br>
            Password: <input type="password" name="password" required><br>
            <button type="submit">Register</button>
        </form>
        <a href="/">Home</a>
    """)

# Login page
@app.route("/login", methods=["GET", "POST"])
def login():
    if request.method == "POST":
        username = request.form["username"]
        password = request.form["password"]

        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM users WHERE username=? AND password=?", (username, password))
        user = cursor.fetchone()
        conn.close()

        if user:
            session["username"] = username
            return redirect(url_for("home"))
        else:
            return "❌ Invalid username or password!"

    return render_template_string("""
        <h2>Login</h2>
        <form method="post">
            Username: <input type="text" name="username" required><br>
            Password: <input type="password" name="password" required><br>
            <button type="submit">Login</button>
        </form>
        <a href="/">Home</a>
    """)

# Logout
@app.route("/logout")
def logout():
    session.pop("username", None)
    return redirect(url_for("home"))

# ------------------- Run App -------------------
if __name__ == "__main__":
    init_db()
    app.run(debug=True)
